{"version":3,"sources":["comps/Title.jsx","firebase/config.js","hooks/useStorage.jsx","comps/ProgressBar.jsx","comps/UploadForm.jsx","hooks/useFirestore.jsx","comps/ImageGrid.jsx","comps/Modal.jsx","App.jsx","index.js"],"names":["Title","className","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","byteTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","height","background","marginTop","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","layout","whileHover","opacity","s","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fb8a08e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Galleria</h1>\n      <h2>Your Gallary</h2>\n      <p>The open source web based photo album organizer.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app'\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCWmofMOYupJNpu5Rjb2d54Xe9MJS_iViA\",\n    authDomain: \"galeria-40f45.firebaseapp.com\",\n    projectId: \"galeria-40f45\",\n    storageBucket: \"galeria-40f45.appspot.com\",\n    messagingSenderId: \"891328408971\",\n    appId: \"1:891328408971:web:aa9521c1a4417440c1d38e\",\n    measurementId: \"G-8HLBFRHTZ1\"\n};\n// Initialize Firebase\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebaseApp.storage();\nconst projectFirestore = firebaseApp.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\n\nexport {\n    projectStorage,\n    projectFirestore,\n    timestamp\n};","import {useState, useEffect } from 'react';\nimport {projectStorage, projectFirestore, timestamp} from '../firebase/config';\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(()=> {\n        //references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.byteTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err)=>{\n            setError(err);\n        }, async ()=> {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp();\n            collectionRef.add({url, createdAt});\n            setUrl(url);\n        })\n    },[file]);\n\n    return {progress, url, error}\n}\n\nexport default useStorage;\n","import React , { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\n\nconst ProgressBar = ({file, setFile}) => {\n     const {url, progress} = useStorage(file);\n\n     useEffect(() => {\n        if (url) {\n          setFile(null);\n        }\n      }, [url, setFile]);\n    \n      return (\n        <motion.div \n          initial={{ \n            height: \"5px\",\n            background: \"red\",\n            marginTop: \"20px\",\n             width: \"60rem\" }}\n          animate={ { height: \"5px\",\n          background: \"red\",\n          marginTop: \"20px\",\n            width: progress*550 + 'px' }}\n       / >\n      );\n}\n\nexport default ProgressBar;","import React,{useState} from 'react';\nimport ProgressBar from './ProgressBar.jsx'\n\nconst UploadForm = () => {\n\n    const [file, setFile] = useState(null);\n    const types = ['image/png', 'image/jpeg'];\n    const [error, setError] = useState(null);\n\n    const changeHandler = (e) => {\n      let selected = e.target.files[0];\n       \n      if(selected && types.includes(selected.type)){\n          setFile(selected);\n          setError('');\n      } else {\n          setFile(null); \n          setError('Please select an image file (png or jpeg)');\n      }\n    }\n\n    return (\n        <form>\n            \n            <label>\n        <input type=\"file\" onChange={changeHandler} />\n        <span>+</span>\n      </label>\n            <div className=\"output\">\n                {error && <div className=\"error\"> {error}</div>}\n                {file && <div>{file.name}</div>}\n                {file && <ProgressBar file={file} setFile={setFile}/>}\n            </div>\n        </form>\n    )\n}\n\nexport default UploadForm;","import {useState, useEffect } from 'react';\nimport {projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(()=> {\n        const unsub = projectFirestore.collection(collection)\n        .orderBy('createdAt','desc')\n        .onSnapshot((snap) => {\n            let documents = [];\n            snap.forEach(doc => {\n                documents.push({...doc.data(), id: doc.id})\n            });\n            setDocs(documents);\n        });\n        return () => unsub();\n    },[collection]);\n    return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore'\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({setSelectedImg}) => {\n    const {docs} = useFirestore('images');\n    console.log(docs)\n    return (\n        <div className=\"img-grid\">\n        {docs && docs.map(doc => (\n          <motion.div className=\"img-wrap\" key={doc.id} \n            layout\n            whileHover={{ opacity: 1 }}s\n            onClick={() => setSelectedImg(doc.url)}\n          >\n            <motion.img src={doc.url} alt=\"uploaded pic\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n          </motion.div>\n        ))}\n      </div>\n    )\n}\n\nexport default ImageGrid;","import React from 'react'\nimport { motion } from 'framer-motion';\nconst Modal = ({selectedImg, setSelectedImg}) => {\n\n    const handleClick= (e) => {\n        if(e.target.classList.contains('backdrop')){\n            setSelectedImg(null);\n        }\n       \n    }\n\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      >\n        <motion.img src={selectedImg} alt=\"enlarged pic\" \n          initial={{ y: \"-100vh\" }}\n          animate={{ y: 0 }}\n        />\n      </motion.div>\n    )\n}\n\nexport default Modal;\n","import React, {useState} from 'react';\nimport Title from './comps/Title.jsx';\nimport UploadForm from './comps/UploadForm.jsx';\nimport ImageGrid from './comps/ImageGrid.jsx';\nimport Modal from './comps/Modal.jsx'\nfunction App() {\n    const [selectedImg, setSelectedImg] = useState(null)\n    return ( \n        <div className = \"App\" >\n        <Title />\n        <UploadForm/>\n        <ImageGrid setSelectedImg={setSelectedImg} />\n        { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/> }\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render( <\n    React.StrictMode >\n    <App / >\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}